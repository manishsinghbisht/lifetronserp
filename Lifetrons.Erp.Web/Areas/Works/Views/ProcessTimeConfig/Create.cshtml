@using Resources;
@using System.Threading
@model Lifetrons.Erp.Data.ProcessTimeConfig

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Process Work Time</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_References</div>
            <div class="panel-body">


                <div class="form-group">
                    @Html.LabelFor(model => model.ProcessId, "ProcessId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProcessId")
                        @Html.ValidationMessageFor(model => model.ProcessId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="FromDate" name="FromDate" value="@DateTime.Now"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                            <span class="glyphicon glyphicon-remove-circle"></span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ToDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="ToDate" name="ToDate" value="@DateTime.Now"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                            <span class="glyphicon glyphicon-remove-circle"></span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartTime, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartTime)
                        @*<input readonly class="timeTxt" type="text" id="StartTime" name="StartTime" value="@DateTime.Now.TimeOfDay"
                               data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />*@
                        @Html.ValidationMessageFor(model => model.StartTime)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndTime, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndTime)
                        @*<input readonly class="timeTxt" type="text" id="EndTime" name="EndTime" value="@DateTime.Now.AddHours(1).TimeOfDay"
                               data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />*@
                        @Html.ValidationMessageFor(model => model.EndTime)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Remark, new { @class = "manageMaxLength", @maxlength = "500", @placeholder = "Remarks" })
                        @Html.ValidationMessageFor(model => model.Remark)
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_SystemInfo</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(User.IsInRole("WorksAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                        @Html.ValidationMessageFor(model => model.Authorized)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" accesskey="S" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ProcessTimeConfig")
}