@using Resources;
@using System.Threading
@using Lifetrons.Erp.Helpers
@using Lifetrons.Erp.Web.Models
@using PagedList
@using PagedList.Mvc
@model IEnumerable<Lifetrons.Erp.Web.Models.MasterProductionScheduleViewModel>

@{
    ViewBag.Title = "MPS (Job) Planning";
}

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">Job schedule (MPS)</h4>
        </div>

        <div class="panel-body">
            <form method="post" action="@Url.Action("Index", "ProdPlanDetail")">
                <table class="table-condensed">
                    <tr>
                        <td class="col-md-2">@Html.ActionLink("Create New", "Create")</td>
                        <td class="col-md-1">@Html.Label("Start Date")</td>
                        <td class="col-md-3">
                            <div class="dateDiv"  style="position: relative">
                                <input class="dateTxt" type="text"  id="StartDate" name="StartDate" value="@DateTime.Now.AddDays(-1)"
                                       data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                                <span class="glyphicon glyphicon-remove-circle"></span>
                            </div>
                        </td>
                        <td class="col-md-1">@Html.Label("End Date")</td>
                        <td class="col-md-3">
                            <div class="dateDiv"  style="position: relative">
                                <input class="dateTxt" type="text"  id="EndDate" name="EndDate" value="@DateTime.Now.AddDays(10)"
                                       data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                                <span class="glyphicon glyphicon-remove-circle"></span>
                            </div>
                        </td>
                        <td class="col-md-2"><input type="submit" value="Submit" class="btn btn-default" /></td>
                    </tr>
                </table>
            </form>
        </div>
    </div>


@if (Model != null)
{
    <table>
        <tr>
            <td class="col-xs-4"></td>
            <td class="col-xs-4">
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, area = ViewContext.RouteData.DataTokens["area"] }), PagedListRenderOptions.MinimalWithPageCountText)
            </td>
            <td class="col-xs-4">
                @{Html.RenderAction("ShowSearchForm", "Search", new { action = "Search", controller = ViewContext.RouteData.DataTokens["area"] + "/ProdPlanDetail", area = "", placeholder = "Search job number" }); }
            </td>
        </tr>
    </table>

    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">Job schedule plan (MPS)</h4>
            <small>@Html.ActionLink("Create New", "Create")</small>
        </div>

        <div class="panel-body" style="overflow: auto;">

            <table class="table table-striped table-hover">
                <tr>
                    <th></th>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDateTime)
                    </th>


                    <th>
                        @Html.DisplayNameFor(model => model.JobNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Weight)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDateTime)
                    </th>
                    <td>Image</td>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <a id="Detail" title="Detail" href="@Url.Action("Details", "ProdPlanDetail", new {id = item.Id})">
                                <i id="social" class="fa fa-expand fa-2x social-fb"></i>
                            </a>
                        </td>

                        <td>
                            <a id="Edit" title="Edit" href="@Url.Action("Edit", "ProdPlanDetail", new {id = item.Id})">
                                <i id="social" class="fa fa-edit fa-2x social-em"></i>
                            </a>
                        </td>

                        <td>
                            @ControllerHelper.ConvertDateTimeFromUtc(item.StartDateTime, User.TimeZone())
                        </td>


                        <td>
                            @Html.DisplayFor(modelItem => item.JobNo)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                            &nbsp;
                            @if (!item.IsRawBookingDone)
                            {
                                <a id="RawBooking" class="info_link" title="Book raw material of this job"
                                   href="@Url.Action("BookRawMaterial", "ProdPlanDetail", new { id = item.Id, jobNo = item.JobNo })">
                                    <i id="social" class="fa fa-archive fa-1x social-tw"></i>
                                </a>
                                @Html.Raw("&nbsp;")
                            }

                            @if (!item.IsIssuedForProduction)
                            {
                                <a id="IssuedForProduction" class="info_link" title="Issue job for production" href="@Url.Action("IssueForProduction", "ProdPlanDetail", new { id = item.Id, jobNo = item.JobNo })">
                                    <i id="social" class="fa fa-chevron-circle-right fa-1x social-tw"></i>
                                </a>
                                @Html.Raw("&nbsp;")
                            }

                            <small class="small"> [Planned: @Html.DisplayFor(modelItem => item.QuantityPlanned)]</small>
                            <br />

                            <small class="small"> [Prod: @Html.DisplayFor(modelItem => item.QuantityInProduction)]</small>
                            <small class="small"> [Ordr Bal: @Html.DisplayFor(modelItem => item.QuantityUnplanned) / @Html.DisplayFor(modelItem => item.OrderQuantity)]</small>

                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Weight) &nbsp; @Html.DisplayFor(modelItem => item.WeightUnit.Name)
                        </td>

                        <td>
                            @ControllerHelper.ConvertDateTimeFromUtc(item.EndDateTime, User.TimeZone())
                        </td>
                        <td>
                            <img src="@Url.Action("GetProductImageThumbnailByJobNo", "Media", new { area = "", jobNo = item.JobNo })" class="img-responsive" alt="Image Not Available"
                                 onerror="this.onerror=null;this.src='@Url.Content("~/Images/ImageNotAvailable.jpg")';" height="50" width="50">
                        </td>
                        <td>
                            <a id="Delete" title="Delete" href="@Url.Action("Delete", "ProdPlanDetail", new {id = item.Id})">
                                <i id="social" class="fa fa-trash-o fa-2x social-gp"></i>
                            </a>
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ProdPlanDetail")
}
