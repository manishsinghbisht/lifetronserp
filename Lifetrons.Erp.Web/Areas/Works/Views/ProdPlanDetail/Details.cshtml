@using Resources;
@model Lifetrons.Erp.Data.ProdPlanDetail
@using System.Threading
@using Lifetrons.Erp.Helpers


@{
    ViewBag.Title = Resources.Metadata_UISection_Details;
}


<div class="row">
    <h2> @Resources.Metadata_UISection_Details </h2>

    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index", "ProdPlanDetail")
    </p>
</div>

<div class="row">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Master Production Schedule Record</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TimeStamp)

        <div class="form-group">
            @Html.LabelFor(model => model.StartDateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    @ControllerHelper.ConvertDateTimeFromUtc(Model.StartDateTime, User.TimeZone())
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    @ControllerHelper.ConvertDateTimeFromUtc(Model.EndDateTime, User.TimeZone())
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Serial, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Serial, new { @class = "manageMaxLength", @maxlength = "3", @placeholder = "1" })
                @Html.ValidationMessageFor(model => model.Serial)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.JobNo, new { @class = "manageMaxLength", @maxlength = "15", @placeholder = "Short description" })
                @Html.ValidationMessageFor(model => model.JobNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Quantity, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Quantity. Ex: 1" })
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Weight, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Weight unit. Ex: 5" })
                
                @Html.DisplayFor(model => model.WeightUnit.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.JobType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CycleTimeInHour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CycleTimeInHour)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CycleCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CycleCapacity)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SetupTimeInHrs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SetupTimeInHrs)
                @Html.ValidationMessageFor(model => model.SetupTimeInHrs)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddOnTimeInHrs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.AddOnTimeInHrs)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActualStartDateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    @ControllerHelper.ConvertDateTimeFromUtc(Model.ActualStartDateTime, User.TimeZone())
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActualEndDateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    @ControllerHelper.ConvertDateTimeFromUtc(Model.ActualEndDateTime, User.TimeZone())
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Remark, new { @class = "manageMaxLength", @maxlength = "250", @placeholder = "Updates" })
                @Html.ValidationMessageFor(model => model.Remark)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Authorized)
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>

    </div>

</div>

<div class="row">
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index", "ProdPlanDetail")
    </p>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ProdPlanDetail")
}
