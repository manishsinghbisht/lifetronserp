@using Resources;
@using Lifetrons.Erp.Helpers
@model Lifetrons.Erp.Data.OperationBOMLineItem

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Operation BOM LineItem</h4>
    <hr />
    <p>
        @Html.ActionLink("Edit", "Edit", new { productId = Model.ProductId, enterpriseStageId = Model.EnterpriseStageId, processId = Model.ProcessId, itemId = Model.ItemId }) |
        @Html.ActionLink("Back to List", "Details", "Operation", new { productId = Model.ProductId, enterpriseStageId = Model.EnterpriseStageId, processId = Model.ProcessId }, null)
    </p>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ProductId)
        </dt>
        <dd>
            @Html.HiddenFor(model => model.ProductId)
            @Html.Raw(ViewBag.ProductName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EnterpriseStageId)
        </dt>
        <dd>
            @Html.HiddenFor(model => model.EnterpriseStageId)
            @Html.Raw(ViewBag.EnterpriseStageName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProcessId)
        </dt>
        <dd>
            @Html.HiddenFor(model => model.ProcessId)
            @Html.Raw(ViewBag.ProcessName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ItemId)
        </dt>
        <dd>
            @Html.HiddenFor(model => model.ItemId)
            @Html.Raw(ViewBag.ItemName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Serial)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Serial)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Quantity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Weight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Weight)@Html.DisplayFor(model => model.WeightUnit.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ShrtDesc)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ShrtDesc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Desc)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Desc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AllowedLossQuantity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AllowedLossQuantity)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AllowedLossWeight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AllowedLossWeight) @Html.DisplayFor(model => model.WeightUnit1.Name)
        </dd>
        

        @*Start Details - Authorized, Active, Created and Modified*@
        <dt>
            @Html.DisplayNameFor(model => model.Authorized)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Authorized)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Active)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Active)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AspNetUser.UserName)
            &nbsp;
            @ControllerHelper.ConvertDateTimeFromUtc(Model.CreatedDate, User.TimeZone())
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AspNetUser1.UserName)
            &nbsp;
            @ControllerHelper.ConvertDateTimeFromUtc(Model.ModifiedDate, User.TimeZone())
        </dd>
        @*End Details - Authorized, Active, Created and Modified*@
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { productId = Model.ProductId, enterpriseStageId = Model.EnterpriseStageId, processId = Model.ProcessId, itemId = Model.ItemId }) |
    @Html.ActionLink("Back to List", "Details", "Operation", new { productId = Model.ProductId, enterpriseStageId = Model.EnterpriseStageId, processId = Model.ProcessId }, null)
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/OperationBOMLineItem")
}