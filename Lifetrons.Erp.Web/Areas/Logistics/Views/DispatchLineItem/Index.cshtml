@using Resources;
@using Lifetrons.Erp.Helpers
@using Microsoft.Practices.Unity; 

@model IEnumerable<Lifetrons.Erp.Data.DispatchLineItem>

@{
    ViewBag.Title = Resources.Metadata_UISection_Index;
}


<div class="panel panel-default">
    <div class="panel-heading">
        <h4 class="panel-title">Dispatch Line Items</h4>

    </div>
    <p>
        <a href="@Url.Action("Create", "DispatchLineItem", new { dispatchId = ViewData["DispatchId"] })" class="btn btn-default">
            <span class="glyphicon glyphicon-plus"></span>
            Add
        </a>
    </p>

    <div class="panel-body" style="overflow:auto;">
        <table class="table table-striped table-hover">
            <tr>
                <th></th>
                <th></th>
                <th>QR</th>
                <th>
                    @Html.DisplayNameFor(model => model.Serial)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderLineItemId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Weight)
                </th>
                <th></th>               
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <a id="Detail" href="@Url.Action("Details", "DispatchLineItem", new { id = item.Id })">
                            <i id="social" class="fa fa-expand fa-2x social-fb"></i>
                        </a>
                    </td>

                    <td>
                        <a id="Edit" href="@Url.Action("Edit", "DispatchLineItem", new { id = item.Id })">
                            <i id="social" class="fa fa-edit fa-2x social-em"></i>
                        </a>
                    </td>

                    <td>
                        @{
                            //var internalUrl = Url.Content("~/"+ CultureHelper.GetDefaultCulture() + "/" + ViewContext.RouteData.DataTokens["area"] + "/DispatchLineItem/Details/" + item.Id);
                            var internalUrl = Url.Action("QRResponse", "DispatchLineItem", new { id = item.Id });
                            var qrCodeUrl = Url.Content("~" + "/anyName.qr?u="+ internalUrl);
                          }
                        <img src=@qrCodeUrl alt="QR Code" style="height:60px;width:60px;">
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Serial)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderLineItem.Product.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                        @{
                            var container = Lifetrons.Erp.App_Start.UnityConfig.GetConfiguredContainer();
                            //var contr = (Lifetrons.Erp.Logistics.Controllers.DispatchLineItemController) container.Resolve(typeof(Lifetrons.Erp.Logistics.Controllers.DispatchLineItemController), "DispatchLineItemController", Microsoft.Practices.Unity.ResolverOverride.);
                            var contr = container.Resolve<Lifetrons.Erp.Logistics.Controllers.DispatchLineItemController>();
                            Lifetrons.Erp.Web.Models.DispatchStatus dispatchStatus1 = contr.DispatchStatus(item.OrderLineItemId.ToString());

                            <text>[Qty already dispatched: @Math.Round(dispatchStatus1.AlreadyDispatchedQuantity), Order Qty: @Math.Round(dispatchStatus1.OrderQuantity) ]</text> 
                                       
                        }
                      
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Weight) &nbsp; @Html.DisplayFor(modelItem => item.WeightUnit.Name)
                     </td>

                   <td>
                       <img src = "@Url.Action("GetProductImageThumbnail", "Media", new { area = "", productId = item.ProductId })" class="img-responsive" alt="Image Not Available"
                           onerror="this.onerror=null;this.src='@Url.Content("~/Images/ImageNotAvailable.jpg")';" height="50" width="50">
                  </td>
                    <td>
                        <a id = "Delete" href="@Url.Action("Delete", "DispatchLineItem", new { id = item.Id })">
                            <i id = "social" class="fa fa-trash-o fa-2x social-gp"></i>
                        </a>
                    </td>
                </tr>
            }

        </table>
    </div>
</div>

@section Scripts
                        {
                            @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/DispatchLineItem")
    @*fancyboxScripts creates issue with Login button in Accounts/Login*@
    @Scripts.Render("~/Scripts/fancybox/fancyboxScripts")
}

