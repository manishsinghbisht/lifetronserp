@using Resources;
@model Lifetrons.Erp.Data.ProcurementOrderDetail
@using System.Threading
@using Lifetrons.Erp.Helpers


@{
    ViewBag.Title = Resources.Metadata_UISection_Create;
}

<h2> @Resources.Metadata_UISection_Create </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Procurement Order Line Item</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ProcurementOrderId, "Procurement Order", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ProcurementOrderId)
                @Html.TextBoxFor(model => model.ProcurementOrder.Name, new { Value = ViewData["ProcurementOrderName"], @readonly = true })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Serial, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Serial, new { @class = "manageMaxLength", @maxlength = "3", @placeholder = "1" })
                @Html.ValidationMessageFor(model => model.Serial)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ProcurementRequestDetailId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProcurementRequestDetailId", string.Empty)
                @Html.ValidationMessageFor(model => model.ProcurementRequestDetailId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ItemId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ItemId)
                @*<input type="text" name="ItemCode" id="ItemCode" readonly="true" required="true"/>*@
                @Html.TextBox("ItemCode", "", new { @readonly = true, @required=true, @placeholder = "Item Code" })
                @Html.ValidationMessageFor(model => model.ItemId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SalesPrice, new { @maxlength = "17", @placeholder = "99.99" })
                @Html.ValidationMessageFor(model => model.SalesPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountPercent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group col-md-2">
                    <input name="DiscountPercent" id="DiscountPercent" type="text" class="form-control" maxlength="17" value="" placeholder="Ex: 5">
                    <span class="input-group-addon">
                        %
                    </span>
                    @Html.ValidationMessageFor(model => model.DiscountPercent)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DisplayFor(model => model.DiscountAmount)
                @Html.ValidationMessageFor(model => model.DiscountAmount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LineItemPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.LineItemPrice)
                @Html.ValidationMessageFor(model => model.LineItemPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Quantity. Ex: 1" })
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Weight, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Weight unit. Ex: 5" })
                @Html.ValidationMessageFor(model => model.Weight)
                @Html.DropDownList("WeightUnitId", String.Empty)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LineItemAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.LineItemAmount)
                @Html.ValidationMessageFor(model => model.LineItemAmount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Pending", Value = "Pending", Selected = true},
                    new SelectListItem{ Text="InProcess", Value = "InProcess" },
                    new SelectListItem{ Text="Completed", Value = "Completed" },
                    new SelectListItem{ Text="Cancelled", Value = "Cancelled" },
                })
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remark, new { @class = "manageMaxLength", @maxlength = "250", @placeholder = "Updates" })
                @Html.ValidationMessageFor(model => model.Remark)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(User.IsInRole("ProcurementAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" accesskey="S" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details", "ProcurementRequest", new { id = ViewData["ProcurementRequestId"] }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ProcurementOrderDetail")
}
