@using Resources;
@model Lifetrons.Erp.Data.ProcurementRequestDetail
@using System.Threading
@using Lifetrons.Erp.Helpers


@{
    ViewBag.Title = Resources.Metadata_UISection_Create;
}

<h2> @Resources.Metadata_UISection_Create </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Request Line Item</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ProcurementRequestId, "Procurement Request", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ProcurementRequestId)
                @Html.TextBoxFor(model => model.ProcurementRequest.Name, new { Value = ViewData["ProcurementRequestName"], @readonly = true })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Serial, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Serial, new { @class = "manageMaxLength", @maxlength = "3", @placeholder = "1" })
                @Html.ValidationMessageFor(model => model.Serial)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemId", string.Empty)
                @Html.ValidationMessageFor(model => model.ItemId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Quantity, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Quantity. Ex: 1" })
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Weight, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Weight unit. Ex: 5" })
                @Html.ValidationMessageFor(model => model.Weight)
                @Html.DropDownList("WeightUnitId", String.Empty)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedCost, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EstimatedCost, new { @class = "manageMaxLength", @maxlength = "17", @placeholder = "Estimated Cost" })
                @Html.ValidationMessageFor(model => model.EstimatedCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequiredByDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="RequiredByDate" name="RequiredByDate" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                    <span class="glyphicon glyphicon-remove-circle"></span>
                </div>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Pending", Value = "Pending", Selected = true},
                    new SelectListItem{ Text="InProcess", Value = "InProcess" },
                    new SelectListItem{ Text="Completed", Value = "Completed" },
                    new SelectListItem{ Text="Cancelled", Value = "Cancelled" },
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remark, new { @class = "manageMaxLength", @maxlength = "250", @placeholder = "Updates" })
                @Html.ValidationMessageFor(model => model.Remark)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(User.IsInRole("ProcurementAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" accesskey="S" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details", "ProcurementRequest", new { id = ViewData["ProcurementRequestId"] }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ProcurementRequestDetail")
}
