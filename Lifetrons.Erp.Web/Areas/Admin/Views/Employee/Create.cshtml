@using Resources;
@using System.Threading
@model Lifetrons.Erp.Data.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId")
                @Html.ValidationMessageFor(model => model.DepartmentId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerId, "ManagerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ManagerId")
                @Html.ValidationMessageFor(model => model.ManagerId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation)
                @Html.ValidationMessageFor(model => model.Designation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShrtDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShrtDesc)
                @Html.ValidationMessageFor(model => model.ShrtDesc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("Grade", new List<SelectListItem>
                            {
                                new SelectListItem{ Text="I", Value = "1" },
                                new SelectListItem{ Text="II", Value = "2" },
                                new SelectListItem{ Text="III", Value = "3" },
                                new SelectListItem{ Text="IV", Value = "4" },
                            })
                @Html.ValidationMessageFor(model => model.Grade)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOJ, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="DOJ" name="DOJ" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOL, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="DOL" name="DOL" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PFFlag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PFFlag)
                @Html.ValidationMessageFor(model => model.PFFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ESIFlag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ESIFlag)
                @Html.ValidationMessageFor(model => model.ESIFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FoodFlag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FoodFlag)
                @Html.ValidationMessageFor(model => model.FoodFlag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FoodRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FoodRate)
                @Html.ValidationMessageFor(model => model.FoodRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HourlyRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HourlyRate)
                @Html.ValidationMessageFor(model => model.HourlyRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employed)
                @Html.ValidationMessageFor(model => model.Employed)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasLeft, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HasLeft)
                @Html.ValidationMessageFor(model => model.HasLeft)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Basic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Basic)
                @Html.ValidationMessageFor(model => model.Basic)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HRA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HRA)
                @Html.ValidationMessageFor(model => model.HRA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExecA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExecA)
                @Html.ValidationMessageFor(model => model.ExecA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConvA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConvA)
                @Html.ValidationMessageFor(model => model.ConvA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeaA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TeaA)
                @Html.ValidationMessageFor(model => model.TeaA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WashA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WashA)
                @Html.ValidationMessageFor(model => model.WashA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CEA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CEA)
                @Html.ValidationMessageFor(model => model.CEA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OthA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OthA)
                @Html.ValidationMessageFor(model => model.OthA)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PFFix, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PFFix)
                @Html.ValidationMessageFor(model => model.PFFix)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarLInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CarLInst)
                @Html.ValidationMessageFor(model => model.CarLInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IncomeTAXInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IncomeTAXInst)
                @Html.ValidationMessageFor(model => model.IncomeTAXInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfTAXInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfTAXInst)
                @Html.ValidationMessageFor(model => model.ProfTAXInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EduTAXInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EduTAXInst)
                @Html.ValidationMessageFor(model => model.EduTAXInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceTAXInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceTAXInst)
                @Html.ValidationMessageFor(model => model.ServiceTAXInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherTAXInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherTAXInst)
                @Html.ValidationMessageFor(model => model.OtherTAXInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LifeInsuInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LifeInsuInst)
                @Html.ValidationMessageFor(model => model.LifeInsuInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HealthInsuInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HealthInsuInst)
                @Html.ValidationMessageFor(model => model.HealthInsuInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoanWInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoanWInst)
                @Html.ValidationMessageFor(model => model.LoanWInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoanWOInst, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LoanWOInst)
                @Html.ValidationMessageFor(model => model.LoanWOInst)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PFNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PFNo)
                @Html.ValidationMessageFor(model => model.PFNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ESINo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ESINo)
                @Html.ValidationMessageFor(model => model.ESINo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bank)
                @Html.ValidationMessageFor(model => model.Bank)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankAcNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAcNo)
                @Html.ValidationMessageFor(model => model.BankAcNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LifeInsuNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LifeInsuNo)
                @Html.ValidationMessageFor(model => model.LifeInsuNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HealthInsuNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HealthInsuNo)
                @Html.ValidationMessageFor(model => model.HealthInsuNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GratuityNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GratuityNo)
                @Html.ValidationMessageFor(model => model.GratuityNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PAN)
                @Html.ValidationMessageFor(model => model.PAN)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpVend, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpVend)
                @Html.ValidationMessageFor(model => model.EmpVend)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DISPNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DISPNo)
                @Html.ValidationMessageFor(model => model.DISPNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastPerformanceReviewDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="LastPerformanceReviewDate" name="LastPerformanceReviewDate" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NextPerformanceReviewDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="NextPerformanceReviewDate" name="NextPerformanceReviewDate" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastCompensationReviewDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="LastCompensationReviewDate" name="LastCompensationReviewDate" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                </div>
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.NextCompensationReviewDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <div class="dateDiv" style="position: relative">
                    <input class="dateTxt" type="text"  id="NextCompensationReviewDate" name="NextCompensationReviewDate" value="@DateTime.Now"
                           data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks)
                @Html.ValidationMessageFor(model => model.Remarks)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(User.IsInRole("HRAdminAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" accesskey="S" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Employee")
}
