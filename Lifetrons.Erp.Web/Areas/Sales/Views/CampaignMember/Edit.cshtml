@using Resources;
@model Lifetrons.Erp.Data.CampaignMember
@using Lifetrons.Erp.Helpers

@{
    ViewBag.Title = Resources.Metadata_UISection_Edit;
}

<h2> @Resources.Metadata_UISection_Edit </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Resources.Metadata_CampaignMember</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        @*<div class="form-group">
            @Html.LabelFor(model => model.CampaignId, "CampaignId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CampaignId", String.Empty)
                @Html.ValidationMessageFor(model => model.CampaignId)
            </div>
        </div>*@
        
        <div class="form-group">
            @Html.LabelFor(model => model.CampaignId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.CampaignId, new { Value = ViewData["CampaignId"] })
                @Html.TextBoxFor(model => model.Campaign.Name, new { Value = ViewData["CampaignName"], @readonly = true })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeadId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LeadId", String.Empty)
                @Html.ValidationMessageFor(model => model.LeadId)
                Select one from either Lead or Contact
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContactId", String.Empty)
                @Html.ValidationMessageFor(model => model.ContactId)
                Select one from either Lead or Contact
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CampaignMemberStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CampaignMemberStatusId")
                @Html.ValidationMessageFor(model => model.CampaignMemberStatusId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShrtDesc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "150", @placeholder = "Short desc" })
                @Html.ValidationMessageFor(model => model.ShrtDesc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(User.IsInRole("SalesAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>

        
      <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (!Model.Authorized || User.IsInRole("SalesAuthorize"))
                {
                    <input type="submit" value="Save" class="btn btn-default" accesskey="S" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details", "Campaign", new { id = Model.CampaignId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/CampaignMember")
}
