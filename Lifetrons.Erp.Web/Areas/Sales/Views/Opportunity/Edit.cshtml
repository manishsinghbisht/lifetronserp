@using Resources;
@using System.Threading
@using Lifetrons.Erp.Helpers
@model Lifetrons.Erp.Data.Opportunity

@{
    ViewBag.Title = Resources.Metadata_OpportunityId_Opportunity;
}

<h2> @Resources.Metadata_UISection_Edit </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Resources.Metadata_OpportunityId_Opportunity</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TimeStamp)
        

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_References</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId")
                        @Html.ValidationMessageFor(model => model.OwnerId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OpportunityNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.OpportunityNo)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Name (Unique)" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Code, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Code (Unique)" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RefNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.RefNo, new { @class = "manageMaxLength", @maxlength = "50", @placeholder = "Ref No" })
                        @Html.ValidationMessageFor(model => model.RefNo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShrtDesc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "150", @placeholder = "Short desc" })
                        @Html.ValidationMessageFor(model => model.ShrtDesc)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.Label("Updates History", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="historyLongDesc" name="historyLongDesc" readonly> @Model.Remark </textarea>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Remark, new { @class = "manageMaxLength", @maxlength = "140", @placeholder = "Updates" })
                        @Html.ValidationMessageFor(model => model.Remark)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Private, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Private)
                        @Html.ValidationMessageFor(model => model.Private)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OpportunityTypeId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OpportunityTypeId")
                        @Html.ValidationMessageFor(model => model.OpportunityTypeId)
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_Relations</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.CampaignId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CampaignId", String.Empty)
                        @Html.ValidationMessageFor(model => model.CampaignId)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.LeadId, "LeadId", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LeadId", String.Empty)
                        @Html.ValidationMessageFor(model => model.LeadId)
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ContactId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ContactId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AccountId", String.Empty)
                        @Html.ValidationMessageFor(model => model.AccountId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LeadSourceId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LeadSourceId")
                        @Html.ValidationMessageFor(model => model.LeadSourceId)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Competitors, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Competitors)
                        @Html.ValidationMessageFor(model => model.Competitors)
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_FollowUp</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.NumberOfEmployees, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumberOfEmployees)
                        @Html.ValidationMessageFor(model => model.NumberOfEmployees)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpectedRevenue, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpectedRevenue)
                        @Html.ValidationMessageFor(model => model.ExpectedRevenue)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CloseDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="CloseDate" name="CloseDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.CloseDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NextStep, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.NextStep)
                        @Html.ValidationMessageFor(model => model.NextStep)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StageId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("StageId")
                        @Html.ValidationMessageFor(model => model.StageId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProbabilityPercent, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group col-md-2">
                            <input name="ProbabilityPercent" id="ProbabilityPercent" type="text" value="@Model.ProbabilityPercent" class="form-control" maxlength="10" placeholder="Ex: 5">
                            <span class="input-group-addon">
                                %
                            </span>
                            @Html.ValidationMessageFor(model => model.ProbabilityPercent)
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.OrderNo, new { @class = "manageMaxLength", @maxlength = "50", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.OrderNo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryStatusId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DeliveryStatusId")
                        @Html.ValidationMessageFor(model => model.DeliveryStatusId)
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_SystemInfo</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(User.IsInRole("SalesAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                        @Html.ValidationMessageFor(model => model.Authorized)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active)
                    </div>
                </div>*@

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (!Model.Authorized || User.IsInRole("SalesAuthorize"))
                {
                    <input type="submit" value="Save" class="btn btn-default" accesskey="S" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Opportunity")
}