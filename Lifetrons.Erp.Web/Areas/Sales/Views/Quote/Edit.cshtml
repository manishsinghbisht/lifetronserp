@using Resources;
@using System.Threading
@using Lifetrons.Erp.Helpers
@model Lifetrons.Erp.Data.Quote

@{
    ViewBag.Title = Resources.Metadata_UISection_Edit;
}

<h2> @Resources.Metadata_UISection_Edit </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Metadata_QuoteId_Quote</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TimeStamp)

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_References</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, "OwnerId", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId")
                        @Html.ValidationMessageFor(model => model.OwnerId)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.QuoteNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.QuoteNo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Quotation Name" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Code, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Quotation Code" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShrtDesc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "150", @placeholder = " Short description" })
                        @Html.ValidationMessageFor(model => model.ShrtDesc)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.Label("Updates History", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="historyLongDesc" name="historyLongDesc" readonly> @Model.Remark </textarea>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Remark, new { @class = "manageMaxLength", @maxlength = "140", @placeholder = "Remark/Updates" })
                        @Html.ValidationMessageFor(model => model.Remark)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RefNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.RefNo, new { @class = "manageMaxLength", @maxlength = "25", @placeholder = "Refernce number" })
                        @Html.ValidationMessageFor(model => model.RefNo)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_Relations</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AccountId", String.Empty)
                        @Html.ValidationMessageFor(model => model.AccountId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ContactId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ContactId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OpportunityId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OpportunityId", String.Empty)
                        @Html.ValidationMessageFor(model => model.OpportunityId)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_FollowUp</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.QuoteStatusId, "QuoteStatusId", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("QuoteStatusId")
                        @Html.ValidationMessageFor(model => model.QuoteStatusId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FollowUpDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="FollowUpDate" name="FollowUpDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.FollowUpDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />

                            @*@if (Thread.CurrentThread.CurrentUICulture.Name == "hi-IN")
                            {
                                <input class="dateTxt" type="text"  id="FollowUpDate" name="FollowUpDate" value="@Model.FollowUpDate" data-date-format="DD/MM/YYYY  hh:mm A"
                                       placeholder="25/01/2014" title="DD/MM/YYYY (25/01/2014)" data-toggle="tooltip" data-placement="right" />
                            }
                            else if (Thread.CurrentThread.CurrentUICulture.Name == "en-US")
                            {
                                <input class="dateTxt" type="text"  id="FollowUpDate" name="FollowUpDate" value="@Model.FollowUpDate" data-date-format="MM/DD/YYYY  hh:mm A"
                                       placeholder="01/25/2014" title="MM/DD/YYYY (01/25/2014)" data-toggle="tooltip" data-placement="right" />
                            }*@
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpirationDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="ExpirationDate" name="ExpirationDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.ExpirationDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />

                            @*@if (Thread.CurrentThread.CurrentUICulture.Name == "hi-IN")
                            {
                                <input class="dateTxt" type="text"  id="ExpirationDate" name="ExpirationDate" value="@Model.ExpirationDate" data-date-format="DD/MM/YYYY  hh:mm A"
                                       placeholder="25/01/2014" title="DD/MM/YYYY (25/01/2014)" data-toggle="tooltip" data-placement="right" />
                            }
                            else if (Thread.CurrentThread.CurrentUICulture.Name == "en-US")
                            {
                                <input class="dateTxt" type="text"  id="ExpirationDate" name="ExpirationDate" value="@Model.ExpirationDate" data-date-format="MM/DD/YYYY  hh:mm A"
                                       placeholder="01/25/2014" title="MM/DD/YYYY (01/25/2014)" data-toggle="tooltip" data-placement="right" />
                            }*@
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_BillingAddress</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BillingAddressId", String.Empty)
                        @Html.ValidationMessageFor(model => model.BillingAddressId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressToName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressToName, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Mr. John Smith" })
                        @Html.ValidationMessageFor(model => model.BillingAddressToName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressLine1, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressLine1, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressLine1)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressLine2, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressLine2, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressLine2)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressLine3, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressLine3, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressLine3)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressCity, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressCity, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressCity)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressPin, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressPin, new { @class = "manageMaxLength", @maxlength = "12", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressPin)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressState, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressState, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressState)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressCountry, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressCountry, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressCountry)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressPhone, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressPhone, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressPhone)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BillingAddressEMail, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BillingAddressEMail, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.BillingAddressEMail)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_ShippingAddress</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ShippingAddressId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ShippingAddressId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressToName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressToName, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Mr. John Smith" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressToName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressLine1, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressLine1, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressLine1)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressLine2, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressLine2, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressLine2)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressLine3, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressLine3, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressLine3)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressCity, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressCity, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressCity)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressPin, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressPin, new { @class = "manageMaxLength", @maxlength = "12", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressPin)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressState, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressState, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressState)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressCountry, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressCountry, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressCountry)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressPhone, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressPhone, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressPhone)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShippingAddressEMail, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShippingAddressEMail, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "" })
                        @Html.ValidationMessageFor(model => model.ShippingAddressEMail)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_TermsConds</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryTerms, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.DeliveryTerms, new { @class = "manageMaxLength", @maxlength = "2000", @placeholder = "Delivery and shipping terms" })
                        @Html.ValidationMessageFor(model => model.DeliveryTerms)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentTerms, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.PaymentTerms, new { @class = "manageMaxLength", @maxlength = "2000", @placeholder = "Payment terms" })
                        @Html.ValidationMessageFor(model => model.PaymentTerms)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_SystemInfo</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(User.IsInRole("SalesAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                        @Html.ValidationMessageFor(model => model.Authorized)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active)
                    </div>
                </div>*@

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (!Model.Authorized || User.IsInRole("SalesAuthorize"))
                {
                    <input type="submit" value="Save" class="btn btn-default" accesskey="S" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Quote")
}
