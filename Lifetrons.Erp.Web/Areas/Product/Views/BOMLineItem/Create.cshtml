@using Resources;
@model Lifetrons.Erp.Data.BOMLineItem

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create - BOM Line Item</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ProductId, new { Value = @ViewData["ProductId"] })
                @Html.TextBox("ProductName", (string)ViewBag.ProductName, new { @readonly = true })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Serial, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Serial, new { @maxlength = "3", @placeholder = "1" })
                @Html.ValidationMessageFor(model => model.Serial)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemId, "ItemId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemId")
                @Html.ValidationMessageFor(model => model.ItemId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShrtDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShrtDesc)
                @Html.ValidationMessageFor(model => model.ShrtDesc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desc)
                @Html.ValidationMessageFor(model => model.Desc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity)
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
                @Html.DropDownList("WeightUnitId", String.Empty)
                @Html.ValidationMessageFor(model => model.WeightUnitId)
            </div>
        </div>

    <div class="form-group">
            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rate)
                @Html.ValidationMessageFor(model => model.Rate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowedLossQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AllowedLossQuantity)
                @Html.ValidationMessageFor(model => model.AllowedLossQuantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowedLossWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AllowedLossWeight)
                @Html.ValidationMessageFor(model => model.AllowedLossWeight)
                @Html.DropDownList("AllowedLossWeightUnitId", String.Empty)
                @Html.ValidationMessageFor(model => model.AllowedLossWeightUnitId)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(User.IsInRole("ProductsAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" accesskey="S" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details", "BOM", new { id = Model.ProductId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/BOMLineItem")
}