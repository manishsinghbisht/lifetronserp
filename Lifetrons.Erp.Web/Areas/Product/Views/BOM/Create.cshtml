@using Resources;
@model Lifetrons.Erp.Data.BOM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bill Of Material</h4>
        <hr />
        @Html.ValidationSummary(true)


        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_References</div>
            <div class="panel-body">
                
                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId")
                        @Html.ValidationMessageFor(model => model.OwnerId)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, "Product", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.ProductId, new { Value = @ViewData["ProductId"] })
                        @Html.TextBox("ProductName", (string)ViewBag.ProductName, new { @readonly = true })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Name (Unique)" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Code, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Code (Unique)" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShrtDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "200", @placeholder = "Short desc" })
                        @Html.ValidationMessageFor(model => model.ShrtDesc)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Desc, new { @class = "manageMaxLength", @maxlength = "399", @placeholder = "Updates" })
                        @Html.ValidationMessageFor(model => model.Desc)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_Relations</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity)
                        @Html.ValidationMessageFor(model => model.Quantity)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Weight)
                        @Html.ValidationMessageFor(model => model.Weight)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WeightUnitId, "WeightUnitId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("WeightUnitId", String.Empty)
                        @Html.ValidationMessageFor(model => model.WeightUnitId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OtherCharges, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OtherCharges)
                        @Html.ValidationMessageFor(model => model.OtherCharges)
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_SystemInfo</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(User.IsInRole("ProductsAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                        @Html.ValidationMessageFor(model => model.Authorized)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" accesskey="S" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/BOM")
}