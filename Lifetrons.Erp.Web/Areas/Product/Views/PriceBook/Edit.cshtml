@using Resources;
@using Lifetrons.Erp.Helpers

@model Lifetrons.Erp.Data.PriceBook

@{
    ViewBag.Title = Resources.Metadata_UISection_Edit;
}

<h2> @Resources.Metadata_UISection_Edit </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Price Book</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        @if (Model.Name == "DEFAULT" || Model.Code == "DEFAULT")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Name)
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Name (Unique)" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
        }


        @if (Model.Name == "DEFAULT" || Model.Code == "DEFAULT")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Code)
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Code, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Code (Unique)" })
                    @Html.ValidationMessageFor(model => model.Code)
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ShrtDesc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "150", @placeholder = "Short desc" })
                @Html.ValidationMessageFor(model => model.ShrtDesc)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Updates History", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea id="historyLongDesc" name="historyLongDesc" readonly> @Model.Desc </textarea>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Desc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Desc, new { @class = "manageMaxLength", @maxlength = "140", @placeholder = "Updates" })
                @Html.ValidationMessageFor(model => model.Desc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SharedWith, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("SharedWithUsersSelectList") <input type="button" value="Add" id="btnSelectSharedWithUser" name="btnSelectSharedWithUser" />
            </div>
            <div class="col-md-10 left">
                @Html.TextAreaFor(model => model.SharedWith)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(User.IsInRole("ProductsAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                @Html.ValidationMessageFor(model => model.Authorized)
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active)
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (!Model.Authorized || User.IsInRole("ProductsAuthorize"))
                {
                    if (Model.Name == "DEFAULT" || Model.Code == "DEFAULT")
                    {
                        <text> Cannot save DEFAULT pricebook </text>
                    }
                    else
                    {
                        <input type="submit" value="Save" class="btn btn-default" accesskey="S" />
                    }
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/PriceBook")
}
