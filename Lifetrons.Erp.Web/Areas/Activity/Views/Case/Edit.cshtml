@using Resources;
@using System.Threading
@using Lifetrons.Erp.Helpers
@model Lifetrons.Erp.Data.Case

@{
    ViewBag.Title = Resources.Metadata_CaseId_Case;
}

<h2> @Resources.Metadata_UISection_Edit </h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Metadata_CaseId_Case</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TimeStamp)

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_References</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId")
                        @Html.ValidationMessageFor(model => model.OwnerId)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.AssignedToId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AssignedToId")
                        @Html.ValidationMessageFor(model => model.AssignedToId)
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Name (Unique)" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Code, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Code (Unique)" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.CaseNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.CaseNo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShrtDesc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "150", @placeholder = " Short description" })
                        @Html.ValidationMessageFor(model => model.ShrtDesc)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.Label("Updates History", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="historyLongDesc" name="historyLongDesc" readonly> @Model.Desc </textarea>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Desc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Desc, new { @class = "manageMaxLength", @maxlength = "140", @placeholder = "Updates" })
                        @Html.ValidationMessageFor(model => model.Desc)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RefNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.RefNo, new { @class = "manageMaxLength", @maxlength = "25", @placeholder = "Refernce number" })
                        @Html.ValidationMessageFor(model => model.RefNo)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Subject, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Subject" })
                        @Html.ValidationMessageFor(model => model.Subject)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_Relations</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AccountId", String.Empty)
                        @Html.ValidationMessageFor(model => model.AccountId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ContactId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ContactId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProductId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ProductId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CampaignId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CampaignId", String.Empty)
                        @Html.ValidationMessageFor(model => model.CampaignId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OpportunityId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OpportunityId", String.Empty)
                        @Html.ValidationMessageFor(model => model.OpportunityId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuoteId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("QuoteId", String.Empty)
                        @Html.ValidationMessageFor(model => model.QuoteId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OrderId", String.Empty)
                        @Html.ValidationMessageFor(model => model.OrderId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("InvoiceId", String.Empty)
                        @Html.ValidationMessageFor(model => model.InvoiceId)
                    </div>
                </div>


            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_FollowUp</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.CaseReasonId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CaseReasonId")
                        @Html.ValidationMessageFor(model => model.CaseReasonId)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.Label("Internal Comments History", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="historyInternalComments" name="historyInternalComments" readonly> @Model.InternalComments </textarea>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InternalComments, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.InternalComments, new { @placeholder = "Internal comments" })
                        @Html.ValidationMessageFor(model => model.InternalComments)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PriorityId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PriorityId")
                        @Html.ValidationMessageFor(model => model.PriorityId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OpeningDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="OpeningDate" name="OpeningDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.OpeningDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />

                            @*@if (Thread.CurrentThread.CurrentUICulture.Name == "hi-IN")
                            {
                                <input class="dateTxt" type="text"  id="OpeningDate" name="OpeningDate" value="@Model.OpeningDate" data-date-format="DD/MM/YYYY  hh:mm A"
                                       placeholder="25/01/2014" title="DD/MM/YYYY (25/01/2014)" data-toggle="tooltip" data-placement="right" />
                            }
                            else if (Thread.CurrentThread.CurrentUICulture.Name == "en-US")
                            {
                                <input class="dateTxt" type="text"  id="OpeningDate" name="OpeningDate" value="@Model.OpeningDate" data-date-format="MM/DD/YYYY  hh:mm A"
                                       placeholder="01/25/2014" title="MM/DD/YYYY (01/25/2014)" data-toggle="tooltip" data-placement="right" />
                            }*@
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CaseStatusId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CaseStatusId")
                        @Html.ValidationMessageFor(model => model.CaseStatusId)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ReportCompletionToId, "Report Completion To", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ReportCompletionToId")
                        @Html.ValidationMessageFor(model => model.ReportCompletionToId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CloseDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="CloseDate" name="CloseDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.CloseDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />

                            @*@if (Thread.CurrentThread.CurrentUICulture.Name == "hi-IN")
                            {
                                <input class="dateTxt" type="text"  id="CloseDate" name="CloseDate" value="@Model.CloseDate" data-date-format="DD/MM/YYYY  hh:mm A"
                                       placeholder="25/01/2014" title="DD/MM/YYYY (25/01/2014)" data-toggle="tooltip" data-placement="right" />
                            }
                            else if (Thread.CurrentThread.CurrentUICulture.Name == "en-US")
                            {
                                <input class="dateTxt" type="text"  id="CloseDate" name="CloseDate" value="@Model.CloseDate" data-date-format="MM/DD/YYYY  hh:mm A"
                                       placeholder="01/25/2014" title="MM/DD/YYYY (01/25/2014)" data-toggle="tooltip" data-placement="right" />
                            }*@
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClosingComments, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.ClosingComments, new { @placeholder = "Closing comments" })
                        @Html.ValidationMessageFor(model => model.ClosingComments)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_SystemInfo</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(User.IsInRole("ServicesAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                        @Html.ValidationMessageFor(model => model.Authorized)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active)
                    </div>
                </div>*@

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (!Model.Authorized || User.IsInRole("ServicesAuthorize"))
                {
                    <input type="submit" value="Save" class="btn btn-default" accesskey="S" />
                }
            </div>
        </div>
    </div>
}

<div class="row">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Case")
}
