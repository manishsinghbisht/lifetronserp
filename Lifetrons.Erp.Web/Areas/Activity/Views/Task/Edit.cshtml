@using Resources;
@using System.Threading
@using Lifetrons.Erp.Helpers
@model Lifetrons.Erp.Data.Task

@{
    ViewBag.Title = Resources.Metadata_TaskId_Task;
}

<h2>@Resources.Metadata_UISection_Edit</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Metadata_TaskId_Task</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TimeStamp)

        <div class="panel panel-default">
            <div class="panel-heading">References</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, "Owner", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId", String.Empty)
                        @Html.ValidationMessageFor(model => model.OwnerId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Name (Unique)" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Code, new { @class = "manageMaxLength", @maxlength = "100", @placeholder = "Code (Unique)" })
                        @Html.ValidationMessageFor(model => model.Code)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TaskNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.TaskNo)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ShrtDesc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ShrtDesc, new { @class = "manageMaxLength", @maxlength = "150", @placeholder = "Short desc" })
                        @Html.ValidationMessageFor(model => model.ShrtDesc)
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.Label("Updates History", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="historyLongDesc" name="historyLongDesc" readonly> @Model.Desc </textarea>
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Desc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Desc, new { @class = "manageMaxLength", @maxlength = "140", @placeholder = "Long Desc" })
                        @Html.ValidationMessageFor(model => model.Desc)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_Relations</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.RelatedToObjectName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.RelatedToObjectName)
                        @Html.DisplayFor(model => model.RelatedToObjectName)
                        @Html.ValidationMessageFor(model => model.RelatedToObjectName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RelatedToId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.RelatedToId)
                        @TempData["RelatedToIdName"]
                        @*@Html.DropDownList("RelatedToId", new List<SelectListItem>
                            {
                                new SelectListItem{ Text="", Value = "" },

                            })*@
                        @Html.ValidationMessageFor(model => model.RelatedToId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LeadId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LeadId", String.Empty)
                        @Html.ValidationMessageFor(model => model.LeadId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ContactId", String.Empty)
                        @Html.ValidationMessageFor(model => model.ContactId)
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_FollowUp</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            
                            <input class="dateTxt" type="text"  id="StartDate" name="StartDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.StartDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="EndDate" name="EndDate" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.EndDate, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsAllDay, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsAllDay)
                        @Html.ValidationMessageFor(model => model.IsAllDay)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TaskStatusId, "TaskStatus", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TaskStatusId")
                        @Html.ValidationMessageFor(model => model.TaskStatusId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PriorityId, "Priority", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PriorityId")
                        @Html.ValidationMessageFor(model => model.PriorityId)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Reminder, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       <div class="dateDiv" style="position: relative">
                            <input class="dateTxt" type="text"  id="Reminder" name="Reminder" value="@ControllerHelper.ConvertDateTimeFromUtc(Model.Reminder, User.TimeZone())"
                                   data-date-format="@Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortDatePattern.ToUpper() @Thread.CurrentThread.CurrentCulture.DateTimeFormat.ShortTimePattern.ToLower()" />
                        </div>
                    </div>
                </div>
              
                <div class="form-group">
                    @Html.Label("Progress History", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="historyProgressDesc" name="historyProgressDesc" readonly> @Model.ProgressDesc </textarea>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProgressDesc, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.ProgressDesc, new { @class = "manageMaxLength", @maxlength = "250", @placeholder = "Updates" })
                        @Html.ValidationMessageFor(model => model.ProgressDesc)
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.ProgressPercent, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group col-md-2">
                            <input name="ProgressPercent" id="ProgressPercent" type="text" class="form-control manageMaxLength" maxlength="17" placeholder="Ex: 5">
                            <span class="input-group-addon">
                                %
                            </span>
                            @Html.ValidationMessageFor(model => model.ProgressPercent)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReportCompletionToId, "Report Completion To", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ReportCompletionToId")
                        @Html.ValidationMessageFor(model => model.ReportCompletionToId)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">@Resources.Metadata_UISection_SystemInfo</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Authorized, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(User.IsInRole("ServicesAuthorize") ? Html.EditorFor(model => model.Authorized) : Html.DisplayFor(model => model.Authorized))
                        @Html.ValidationMessageFor(model => model.Authorized)
                    </div>
                </div>
                
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <span class="btn btn-success btn-lg"><i class="glyphicon glyphicon-ok"></i> Good job</span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (!Model.Authorized || User.IsInRole("ServicesAuthorize"))
                {
                    <input type="submit" value="Save" class="btn btn-default" accesskey="S" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/Task")
}
